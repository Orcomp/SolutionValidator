<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="catel">
      <section name="logging" type="Catel.Logging.LoggingConfigurationSection, Catel.Core" />
    </sectionGroup>
    <section name="solutionValidatorConfigSection" type="SolutionValidator.Configuration.SolutionValidatorConfigurationSection, SolutionValidator.Core"/>
  </configSections>
  <catel>
    <logging>
      <listeners>
        <listener type="Catel.Logging.FileLogListener" 
                  FilePath="SolutionValidator.log" 
                  IgnoreCatelLogging="true" IsDebugEnabled="true" IsInfoEnabled="true" IsWarningEnabled="true" IsErrorEnabled="true" />
        <listener type="Catel.Logging.ConsoleLogListener"
                  IgnoreCatelLogging="true" IsDebugEnabled="false" IsInfoEnabled="true" IsWarningEnabled="true" IsErrorEnabled="true" />
      </listeners>
    </logging>
  </catel>

  <solutionValidatorConfigSection>
    <!-- 
    definitionFilePath attribute:
    .............................
    - Refers to a .gitignore like syntax folder and file check definition file 
    - Can be absolute and relative path 
    - In case of relative it is always interpreted as relative to _this_ file (and not the current runtime folder)
    - Default value: definitionFilePath=".folderStructure"
    
    check attribute: 
    ................
    - Check or ignore.
    - Default value: check="true"
    -->
    <folderStructure definitionFilePath="definitionFilePath" check="false" />
    <!-- The following would be the default in case the whole folderStructure element or the definitionFilePath attribute is missing:
    <folderStructure definitionFilePath=".folderStructure" check="true" />
    -->

    <projectFile>
      <!-- 
      outputPath attribute:
      ......................
      - The expected output path can be configurable but it must be always relative form within the repoRoot. 
      - Default value: outputPath="output"
    
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
      
      Note: This element has default value for the case it is missing. To prevent
      this validation you must include this element and set check = "false" expliticly      
      -->
      <outputPath value="outputPath" check="false" />
      <!-- The following would be the default in case the whole outputPath element or the value attribute is missing:
      <outputPath value="output" check="true" />
      -->

      <!--
        requiredConfigurations: The configuration names what must be contained in the project file
        ......................
        
        check attribute: 
        ................
        - Check or ignore.
        - Default value: check="true"
        Note: This collection has default value for the case it is missing or empty. To prevent
        this validation you must include this element and set check = "false" expliticly
        -->
      <requiredConfigurations check="false" >
        <!-- MS Parser error message: "...property cannot have the name 'configurationName' because it
            starts with the reserved prefix 'config' or 'lock'..."
            So we just call it: 'name' :-( -->
        <add name="name"/>
        <!-- The following would be the default in case the whole requiredConfigurations element is missing or empty:
          <add name="Debug"/>
          <add name="Release"/>
          -->
      </requiredConfigurations>
      <!-- 
      checkIdentical: Compares two project properties and checks they are identical
      ...............
        
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
      Note: This collection has default value for the case it is missing or empty. To prevent
      this validation you must include this element and set check = "false" expliticly
      -->
      <checkIdentical check="false" >
        <add propertyName="propertyName" otherPropertyName="otherPropertyName"/>
        <!-- The following would be the default in case the whole requiredConfigurations element is missing or empty:
        <add propertyName="AssemblyName" otherPropertyName="RootNamespace"/>
        <add propertyName="AssemblyName" otherPropertyName="ProjectName"/>
        -->
      </checkIdentical>
      <!-- 
      checkForValue: Compares two project properties and checks they have the given value
      ...............
        
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
      Note: This collection has default value for the case it is missing or empty. To prevent
      this validation you must include this element and set check = "false" expliticly
      -->
      <checkForValue check="false">
        <add propertyName="propertyName" value="value"/>
        <!-- The following would be the default in case the whole checkForValue element is missing:
        <add propertyName ="AppDesignerFolder" value="Properties" />
        <add propertyName ="Platform" value="AnyCPU" />
        -->
      </checkForValue>
    </projectFile>
  </solutionValidatorConfigSection>
  
</configuration>