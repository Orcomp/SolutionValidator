<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="catel">
      <section name="logging" type="Catel.Logging.LoggingConfigurationSection, Catel.Core" />
    </sectionGroup>
    <section name="solutionValidatorConfigSection" type="SolutionValidator.Configuration.SolutionValidatorConfigurationSection, SolutionValidator.Core"/>
  </configSections>
  <catel>
    <logging>
      <listeners>
        <listener type="Catel.Logging.FileLogListener"
                  FilePath="SolutionValidator.log"
                  IgnoreCatelLogging="true" IsDebugEnabled="true" IsInfoEnabled="true" IsWarningEnabled="true" IsErrorEnabled="true" />
        <listener type="Catel.Logging.ConsoleLogListener"
                  IgnoreCatelLogging="true" IsDebugEnabled="false" IsInfoEnabled="true" IsWarningEnabled="true" IsErrorEnabled="true" />
      </listeners>
    </logging>
  </catel>

  <solutionValidatorConfigSection>
    <!-- 
    folderStructure element: 
    ........................
    Defines folder structure validation rules
    
      definitionFilePath attribute:
      .............................
      - Refers to a .gitignore like syntax folder and file check definition file 
      - Can be absolute and relative path 
      - In case of relative it is always interpreted as relative to _this_ file (and not the current runtime folder)
      - Default value: definitionFilePath=".folderStructure"
    
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
    -->
    <!-- The following would be the default in case the whole folderStructure element or the definitionFilePath attribute is missing:
    <folderStructure definitionFilePath=".folderStructure" check="true" />
    -->
    <folderStructure definitionFilePath="definitionFilePath" check="false" />

    <!-- 
    csharpFormatting element: 
    ........................
    Defines NRefactory based C# formatting options    
    
      optionsFilePath attribute:
      .............................
      - Refers to a SharpDevelopProperties.xml like options file.
      It can be exactly a SharpDevelopProperties.xml file, then the <Properties key="CSharpFormatting"...>
      path will be readed all other not formatting specific IDE settings are safely ignored.
    
      - If you are not interested in using an existing SharpDevelopProperties.xml file because you have not any
      then there is no need to replicate the whole file, just create a a very simple dynamicly typed XML properties file.
      For a full sample how this file could be look please refer to StandAloneCSharpFormatting.xml test file in the 
      SolutionValidator.Core.Tests project 
    
      - Can be absolute and relative path 
      - In case of relative it is always interpreted as relative to _this_ file (and not the current runtime folder)
      
      - Default value: optionsFilePath="csharpformatting.xml"  In case of using this default _and_ this file is missing
      Validator will use NRefactory's FormattingOptionsFactory.CreateAllman() to get a default option set which is similar
      to the VS IDE default formatting settings.
      
    
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
    -->
    <!-- The following would be the default in case the whole folderStructure element or the definitionFilePath attribute is missing:
    <csharpFormatting optionsFilePath="csharpformatting.xml" check="true"/>
    -->
    <csharpFormatting optionsFilePath="optionsFilePath" check="false" >
      <sourceFileFilters>
        <!--
        sourceFileFilters element:
        ........................
        Multiple <add.../> elements can be added.
        An add element may have include and/or exclude attrubutes. In case of the attribute value
        is empty string then it will be ignored. Both attribute must be a valid regex. 
        The regex will be evaluated against the relative path of all files within the repo.
        In case of no add element specified:
        - Default value: <add include ="^src\\.*" exclude=".*\\obj\\(Debug|Release)\\.*" />
        -->
        <add include ="include" exclude="exclude" />
      </sourceFileFilters>
      <codeMemberOrder>
        <add member="StaticFields" />
        <!--<add member="InstanceFields" />
        <add member="StaticProperties" />
        <add member="InstanceProperties" />
        <add member="Indexer" />
        <add member="Constructors" />
        <add member="InstanceMethods" />
        <add member="StaticEvents" />
        <add member="InstanceEvents" />
        <add member="Operators" />
        <add member="StaticFields" />
        <add member="NestedTypes" />-->
      </codeMemberOrder>
    </csharpFormatting>


    <projectFile>
      <!-- 
      projetFile element: 
      ........................
      Defines validations related with .csproj file content.
      
      outputPath attribute:
      ......................
      - The expected output path can be configurable but it must be always relative form within the repoRoot. 
      - Default value: outputPath="output"
    
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
      
      Note: This element has default value for the case it is missing. To prevent
      this validation you must include this element and set check = "false" expliticly      
      -->

      <!-- The following would be the default in case the whole outputPath element or the value attribute is missing:
      <outputPath value="output" check="true" />
      -->
      <outputPath value="outputPath" check="false" />

      <!--
        requiredConfigurations element: The configuration names what must be contained in the project file
        ...............................
        
          check attribute: 
          ................
          - Check or ignore.
          - Default value: check="true"
          Note: This collection has default value for the case it is missing or empty. To prevent
          this validation you must include this element and set check = "false" expliticly
        -->
      <requiredConfigurations check="false" >
        <!-- MS Parser error message: "...property cannot have the name 'configurationName' because it
            starts with the reserved prefix 'config' or 'lock'..."
            So we just call it: 'name' :-( -->
        <add name="name"/>
        <!-- The following would be the default in case the whole requiredConfigurations element is missing or empty:
          <add name="Debug"/>
          <add name="Release"/>
          -->
      </requiredConfigurations>
      <!-- 
      checkIdentical: Compares two project properties and checks they are identical
      ...............
        
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
      Note: This collection has default value for the case it is missing or empty. To prevent
      this validation you must include this element and set check = "false" expliticly
      -->
      <checkIdentical check="false" >
        <add propertyName="propertyName" otherPropertyName="otherPropertyName"/>
        <!-- The following would be the default in case the whole requiredConfigurations element is missing or empty:
        <add propertyName="AssemblyName" otherPropertyName="RootNamespace"/>
        <add propertyName="AssemblyName" otherPropertyName="ProjectName"/>
        -->
      </checkIdentical>
      <!-- 
      checkForValue: Compares two project properties and checks they have the given value
      ...............
        
      check attribute: 
      ................
      - Check or ignore.
      - Default value: check="true"
      Note: This collection has default value for the case it is missing or empty. To prevent
      this validation you must include this element and set check = "false" expliticly
      -->
      <checkForValue check="false">
        <add propertyName="propertyName" value="value"/>
        <!-- The following would be the default in case the whole checkForValue element is missing:
        <add propertyName ="AppDesignerFolder" value="Properties" />
        <add propertyName ="Platform" value="AnyCPU" />
        -->
      </checkForValue>
    </projectFile>
  </solutionValidatorConfigSection>

</configuration>